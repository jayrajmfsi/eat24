imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: "@AppBundle/Resources/config/services.yml"}

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    #translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    templating:
        engines: ['twig']
    assets: ~
    php_errors:
        log: true
    translator: ~
# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        default_connection: app
        connections:
          app:
            driver: pdo_mysql
            host:   '%database_host%'
            port:   '%database_port%'
            dbname: '%database_name%'
            user:   '%database_user%'
            password: '%database_password%'
            charset: UTF8
            mapping_types:
              point: point
        types:
          point: AppBundle\Entity\Utils\PointType
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: '%kernel.project_dir%/var/data/data.sqlite'
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path: '%database_path%'

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        dql:
          string_functions:
            ST_DISTANCE_SPHERE: AppBundle\DoctrineExtensions\STDistanceSphere
            POINT_STR: AppBundle\DoctrineExtensions\PointStr

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

sensio_framework_extra:
   router:
        annotations: false
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AppBundle\Entity\User
    from_email:
        address: "%mailer_user%"
        sender_name: "Eat 24"

services:
    api_formatter:
        class: Monolog\Formatter\JsonFormatter
    text_formatter:
        class: Monolog\Formatter\LineFormatter

monolog:
  handlers:
    main:
      type: fingers_crossed
      action_level: error
      handler: nested
    nested:
      type:  stream
      path:  "%kernel.logs_dir%/%kernel.environment%.log"
      level: debug
    api:
      type: stream
      path: "%kernel.logs_dir%/apiRequestResponse.log"
      level: debug
      channels: [api]
      formatter: api_formatter
    exception:
      type: stream
      path: "%kernel.logs_dir%/exception.log"
      level: error
      channels: [exception]
      formatter: api_formatter
    cron:
      type: stream
      path: "%kernel.logs_dir%/cron.log"
      level: debug
      channels: [cron]
      formatter: text_formatter
  channels: [api, exception, cron]

# FOS Rest Configuration
fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener: ~
    allowed_methods_listener: true
    view:
        view_response_listener: 'force'
        formats:
            rss: false
            json: true
            xml: false
        templating_formats:
            html: true
        force_redirects:
            html: true
        failed_validation: HTTP_BAD_REQUEST
        default_engine: php
    service:
        serializer: ~
    serializer:
        serialize_null: true

doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations

lexik_maintenance:
  authorized:
    ips: "%allowed_ips_during_maintenance%"
  driver:
    ttl: 3600
    class: '\Lexik\Bundle\MaintenanceBundle\Drivers\FileDriver'
    options: {file_path: "%kernel.project_dir%/var/cache/lock"}

  #Optional. response code and status of the maintenance page
  response:
    code: 503
    status: "Service Temporarily Unavailable"


jms_serializer:
  visitors:
    json:
      options: JSON_UNESCAPED_UNICODE

nelmio_api_doc:
  areas:
    path_patterns: # an array of regexps
      - ^/1.
      - ^/api/1.

  documentation:
    schemes: [http, https]
    info:
      title: Eat 24 Platform
      version: 1.0.0
      description: Food delivery system
    tags:
      - name: Auth
        description: Operations on getting access token and refresh token
      - name: Profile
        description: Operations on customer profile creation and updation
      - name: Address
        description: Operations on user addresses
      - name: Restaurant
        description: Operations on restaurants and its menu
      - name: Order
        description: Operations on user orders


